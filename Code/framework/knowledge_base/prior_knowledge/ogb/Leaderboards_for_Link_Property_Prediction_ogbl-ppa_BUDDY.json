{
    "Task Description": "Leaderboards for Link Property Prediction",
    "Dataset Name": "ogbl-ppa",
    "Dataset Link": "../linkprop/#ogbl-ppa",
    "Rank": 8,
    "Method": "BUDDY",
    "External Data": "No",
    "Test Accuracy": "0.4934 ± 0.0098",
    "Validation Accuracy": "0.4931 ± 0.0025",
    "Contact": "mailto:benjamin.chamberlain@gmail.com",
    "Paper Link": "https://openreview.net/pdf?id=m1oqEOAozQU",
    "Code Link": "https://github.com/melifluos/subgraph-sketching",
    "Parameters": "644",
    "Hardware": "Tesla K80 (12GB GPU)",
    "Date": "Aug 23, 2023",
    "Local Paper PDF Path": "knowledge_base/Leaderboards_for_Link_Property_Prediction/ogbl-ppa/BUDDY.pdf",
    "Paper Summary": "The paper introduces a novel approach for link prediction (LP) in graph neural networks (GNNs), particularly through the design of two key models: ELPH (Efficient Link Prediction with Hashing) and BUDDY. \n\n### Model Design Aspects\n\n1. **ELPH (Efficient Link Prediction with Hashing)**:\n   - **Subgraph Sketching**: Instead of constructing explicit subgraphs, ELPH uses subgraph sketches to approximate important structural features relevant for link prediction. It leverages techniques like HyperLogLog and MinHashing to summarize node relationships efficiently.\n   - **Expressive Power**: The design aims to better address the limitations encountered by standard Message Passing Neural Networks (MPNNs) in counting structural elements like triangles. The use of sketches allows ELPH to differentiate between links even when nodes are automorphic (having identical structural roles), thereby resolving the automorphic node problem.\n   - **Feature Propagation**: ELPH follows the MPNN framework, where it passes messages augmented with subgraph sketches during the feature propagation phase. It computes intersection estimates for neighborhood sets to derive link-level features without needing to construct subgraphs.\n   - **Asymptotic Complexity**: ELPH maintains comparable time complexity to standard GCNs while being more expressive due to its ability to encapsulate more intricate structural features.\n\n2. **BUDDY**:\n   - **Precomputation**: BUDDY builds on ELPH but enhances scalability by precomputing structural features and node features, which helps manage larger datasets that exceed GPU memory limits. This model removes the necessity for batch sampling of subgraphs.\n   - **Non-Parametric Feature Propagation**: BUDDY uses a non-parametric approach to propagate features, allowing it to work effectively with precomputed structural data while retaining the performance benefits seen in ELPH. The architecture bypasses the challenge of generating subgraphs at every link prediction instance, making it far more efficient.\n   - **Storage and Complexity Management**: The architecture allows caching of edge features based on precomputed values, which optimizes memory usage and computation time across multiple link predictions.\n\n### Summary of Features\n- **Structure Features**: Both models emphasize the use of innovative structural features derived from neighborhood information and link relationships, with a specific focus on the counts of substructures that govern link existence.\n- **Link-Level Readout Functions**: ELPH utilizes a link-level readout function that processes the messages passed during propagation efficiently to yield link probabilities.\n\nOverall, the design of ELPH and BUDDY addresses existing inefficiencies in GNN-based link prediction by utilizing advanced techniques for structural information aggregation while maintaining computational efficiency. These innovations enable the models to outperform traditional methods without succumbing to common pitfalls related to structural symmetry in graphs."
}