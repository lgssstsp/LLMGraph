{
    "Task Description": "Leaderboards for Link Property Prediction",
    "Dataset Name": "ogbl-citation2",
    "Dataset Link": "../linkprop/#ogbl-citation2",
    "Rank": 10,
    "Method": "BUDDY",
    "External Data": "No",
    "Test Accuracy": "0.8796 ± 0.0008",
    "Validation Accuracy": "0.8793 ± 0.0008",
    "Contact": "mailto:benjamin.chamberlain@gmail.com",
    "Paper Link": "https://openreview.net/pdf?id=m1oqEOAozQU",
    "Code Link": "https://github.com/melifluos/subgraph-sketching",
    "Parameters": "166,531",
    "Hardware": "Tesla K80 (12GB GPU)",
    "Date": "Aug 29, 2023",
    "Local Paper PDF Path": "knowledge_base/Leaderboards_for_Link_Property_Prediction/ogbl-citation2/BUDDY.pdf",
    "Paper Summary": "The paper introduces a novel approach to link prediction (LP) using Graph Neural Networks (GNNs), specifically addressing the limitations of existing methods such as Message Passing Neural Networks (MPNNs) and Subgraph GNNs (SGNNs). The authors propose two main model architectures: Efficient Link Prediction with Hashing (ELPH) and a scalable version called BUDDY.\n\n### Key Model Design Aspects:\n\n1. **ELPH Model**:\n   - ELPH is designed to enhance expressiveness in link prediction tasks while avoiding the explicit construction of subgraphs. \n   - It integrates subgraph sketches, facilitating the communication of key structural features without the overhead of full subgraph processing. The model utilizes two counting techniques, HyperLogLog and MinHash, to estimate structural features efficiently.\n   - The architecture includes:\n     - **Message Passing**: Messages are created by aggregating sketches of neighboring nodes, thereby summarizing the important qualities of subgraphs in a compact form.\n     - **Feature Propagation**: ELPH employs feature propagation according to the MPNN formalism, allowing for local updates based on incoming messages.\n     - **Edge-Level Readout Function**: The link probability between a pair of nodes is computed by relating their representations while incorporating the learned structural features.\n\n2. **BUDDY Model**:\n   - BUDDY builds upon ELPH by introducing preprocessing methods to enhance scalability beyond GPU memory limits. \n   - It precomputes node features and sketch estimates, enabling efficient batch processing without the need for repeated subgraph constructions during inference. \n   - This highlights the need for **caching** and **efficient propagations** of features, with a focus on structural features, which play a crucial role in the model's predictive performance.\n   - The model architecture maintains the essential characteristics of ELPH while providing increased efficiency and reduced runtime costs, effectively addressing scalability challenges.\n\n### General Contributions in Model Design:\n- **Subgraph Sketching**: Both ELPH and BUDDY utilize hashing techniques to capture essential subgraph characteristics without constructing subgraphs explicitly. This innovation allows the models to retain crucial structural information while ensuring computational efficiency.\n- **Avoiding the Automorphic Node Problem**: ELPH and BUDDY are explicitly designed to overcome the automorphic node problem that plagues traditional MPNNs, which often fail to distinguish between nodes with indistinguishable structural properties.\n- **Integration of Structural Features**: By aggregating and utilizing structural feature counts, both models improve the representational power of GNNs, enabling the identification of richer relations between linked pairs.\n\nOverall, the paper presents a significant advancement in link prediction by reconceptualizing how structural information from graphs is integrated into GNN models through efficient representations and preprocessing techniques."
}