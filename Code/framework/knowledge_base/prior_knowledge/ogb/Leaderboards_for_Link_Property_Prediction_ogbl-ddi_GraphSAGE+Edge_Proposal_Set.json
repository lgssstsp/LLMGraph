{
    "Task Description": "Leaderboards for Link Property Prediction",
    "Dataset Name": "ogbl-ddi",
    "Dataset Link": "../linkprop/#ogbl-ddi",
    "Rank": 15,
    "Method": "GraphSAGE+Edge Proposal Set",
    "External Data": "No",
    "Test Accuracy": "0.7495 ± 0.0317",
    "Validation Accuracy": "0.6696 ± 0.0198",
    "Contact": "mailto:qh53@cornell.edu",
    "Paper Link": "https://arxiv.org/pdf/2106.15810.pdf",
    "Code Link": "https://github.com/CUAI/Edge-Proposal-Sets",
    "Parameters": "1,421,057",
    "Hardware": "GeForce RTX 2080 Ti (11GB GPU)",
    "Date": "Jul 21, 2021",
    "Local Paper PDF Path": "knowledge_base/Leaderboards_for_Link_Property_Prediction/ogbl-ddi/GraphSAGE+Edge_Proposal_Set.pdf",
    "Paper Summary": "The paper discusses a method for improving link prediction in graphs through the addition of \"proposal sets,\" which are sets of edges added as a preprocessing step before running link prediction algorithms. The central idea is that augmenting the graph with edges that align with its underlying structure can enhance the performance of link prediction algorithms.\n\n### Key Methods Discussed:\n\n1. **Proposal Sets Creation**:\n   - **General Approach**: A broad starting set \\( S \\) is defined, which consists of all pairs of nodes with at least one common neighbor. This starting set is then pruned to create the proposal set \\( P \\).\n   - **Score Functions**: The construction of the proposal set leverages score functions, such as the common neighbor count or the Adamic-Adar index, to identify edges with the highest scores from the starting set.\n   - **Filtering and Ranking Framework (Filter & Rank)**: This framework employs two models:\n     - **Filtering Model**: First, it identifies high-scoring edges from the starting set to form the proposal set.\n     - **Ranking Model**: Next, it integrates this proposal set into a link prediction algorithm to generate final edge predictions.\n\n2. **Graph Topology Modification**:\n   - The paper emphasizes modifying the graph's topology by adding edges that are likely to be present (or potentially future connections) based on domain knowledge or heuristics. This helps in reinforcing existing structures, making it easier for algorithms to predict actual connections.\n\n3. **High Precision and Low Recall Focus**:\n   - The authors highlight that good proposal sets often exhibit high precision but low recall—i.e., they contain relevant edges but many potential edges remain unadded. This helps guide the link prediction algorithms toward more likely edges.\n\n4. **Neighborhood Heuristics and Graph Neural Networks (GNNs)**:\n   - The methods can be applied to both traditional neighborhood heuristic-based algorithms and modern GNN approaches. For GNNs, the added edges in the proposal set facilitate better node representation learning, as they create connections between closely related nodes.\n\n5. **Target Size Determination**:\n   - Specific procedures are suggested for identifying an optimal target size for the proposal set, balancing model performance and computational efficiency. The model or heuristic used for filtering and ranking impacts the performance, requiring empirical tuning.\n\n6. **Robustness to Negative Edges**:\n   - The approach demonstrates a certain tolerance to the introduction of negative edges in the proposal sets, minimizing adverse effects on overall prediction accuracy.\n\n7. **Iterative Improvement**:\n   - The article discusses the potential for iterative refinement of both the proposal set and the models used, indicating a promising direction for future research.\n\nThis methodology emphasizes a combination of heuristics and empirical tuning to leverage the propagation of information within the graph and optimize predictions effectively."
}