{
    "Task Description": "Leaderboards for Link Property Prediction",
    "Dataset Name": "ogbl-ppa",
    "Dataset Link": "../linkprop/#ogbl-ppa",
    "Rank": 18,
    "Method": "Common Neighbor",
    "External Data": "No",
    "Test Accuracy": "0.2765 ± 0.0000",
    "Validation Accuracy": "0.2823 ± 0.0000",
    "Contact": "mailto:muhan.zhang@hotmail.com",
    "Paper Link": "http://www.eecs.harvard.edu/~michaelm/CS222/linkpred.pdf",
    "Code Link": "https://github.com/facebookresearch/SEAL_OGB",
    "Parameters": "0",
    "Hardware": "GeForce RTX 2080S (8GB GPU)",
    "Date": "Feb 12, 2021",
    "Local Paper PDF Path": "knowledge_base/Leaderboards_for_Link_Property_Prediction/ogbl-ppa/Common_Neighbor.pdf",
    "Paper Summary": "The paper focuses on various methods for link prediction in social networks, emphasizing the model design aspects of each technique. Here's a summary of the methods discussed:\n\n### 1. **Basic Approaches**\n   - **Graph Distance**: This method ranks pairs of nodes based on the length of the shortest path connecting them. It relies on the \"small world\" concept, where short paths are common, but it has limitations in performance due to tenuous connections.\n\n### 2. **Node Neighborhood-Based Methods**\n   - **Common Neighbors**: The score for a pair of nodes \\(x\\) and \\(y\\) is defined as the number of common neighbors. This approach assumes that nodes with overlapping connections are more likely to form a new edge.\n   - **Jaccard’s Coefficient**: This method calculates similarity based on the proportion of common neighbors relative to the total number of unique neighbors.\n   - **Adamic/Adar Index**: Similar to Jaccard's coefficient but weights common neighbors inversely by their frequency in the entire network to give more weight to rare nodes.\n   - **Preferential Attachment**: This predicts future connections based on the current number of neighbors, suggesting that nodes with more connections are more likely to gain additional links.\n\n### 3. **Path-Based Methods**\n   - **Katz Measure**: It sums paths between two nodes, giving more weight to shorter paths to emphasize immediate connections.\n   - **Hitting Time and Commute Time**: These measures derive from random walks on the graph. Hitting time estimates how quickly a random walker starting at one node can reach another, while commute time accounts for the return journey.\n   - **Rooted PageRank**: This adaptation of PageRank focuses on the stationary distribution of a random walk that occasionally resets to the starting node.\n\n### 4. **Higher-Level Approaches**\n   - **SimRank**: A recursive measure that evaluates the similarity between nodes based on the similarity of their neighbors. Two nodes are similar if they share neighbors that are also similar.\n   - **Low-rank Approximation**: This technique utilizes singular value decomposition to reduce noise and simplify the representation of the adjacency matrix, providing more manageable computations for node similarity.\n   - **Unseen Bigrams Prediction**: This approach uses existing scores to estimate the likelihood of unseen pairs forming a link, leveraging the relationships of other nodes in the network.\n\n### 5. **Clustering-Based Methods**\n   - **Clustering**: This method entails deleting less significant edges from the graph and using a cleaner subgraph for predictions. It aims to increase the robustness of proximity measures by focusing on stronger connections.\n\nOverall, the paper emphasizes the extraction of latent information from the network topology to predict future interactions effectively. The methods vary from simple similarity measures based on shared neighbors to more complex probabilistic models based on the structure of the network."
}