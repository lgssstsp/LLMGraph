{
    "Task Description": "Leaderboards for Link Property Prediction",
    "Dataset Name": "ogbl-ppa",
    "Dataset Link": "../linkprop/#ogbl-ppa",
    "Rank": 5,
    "Method": "SUREL+",
    "External Data": "No",
    "Test Accuracy": "0.5432 ± 0.0044",
    "Validation Accuracy": "0.5492 ± 0.0112",
    "Contact": "mailto:yinht@purdue.edu",
    "Paper Link": "https://arxiv.org/abs/2303.03379",
    "Code Link": "https://github.com/Graph-COM/SUREL_Plus",
    "Parameters": "52,802",
    "Hardware": "NVIDIA A100 (80G)",
    "Date": "Feb 20, 2023",
    "Local Paper PDF Path": "knowledge_base/Leaderboards_for_Link_Property_Prediction/ogbl-ppa/SUREL+.pdf",
    "Paper Summary": "The paper presents the SUREL+ framework for scalable subgraph-based graph representation learning, which addresses key challenges in existing SGRL methods. Here's a focused summary of the methods and model design aspects:\n\n### Model Design Aspects of SUREL+\n\n1. **Node Set Representation**:\n   - SUREL+ transitions from using random walks to sampling node sets to represent subgraphs. This helps eliminate node duplication found in sampled walks, enhancing efficiency.\n\n2. **Data Structures**:\n   - The framework introduces a customized sparse data structure called **SpG** to store the sampled node sets and their structural features. \n   - SpG efficiently organizes data for quick access and memory efficiency. It consists of three arrays:\n     - **indptr**: Tracks the starting index of each sampled node set.\n     - **indices**: Contains the indices of all sampled nodes.\n     - **SFptr**: Stores the structural features associated with the node sets.\n\n3. **Sampling Techniques**:\n   - SUREL+ employs two types of samplers:\n     - **Walk-based Sampler**: This samples short random walks that are subsequently reduced to unique nodes.\n     - **Metric-based Sampler**: Utilizes graph metrics (like personalized PageRank scores or shortest path distances) to select the top-K nodes from each seed node's neighborhood.\n\n4. **Structural Features**:\n   - **Relative Position Encoding (RPE)** is used to capture the relative distances between nodes in sampled walks. This feature is computed offline and attached to the sampled walks before they are processed.\n   - Other structural features can include landing probabilities from random walks and shortest path distances.\n\n5. **Join Operation**:\n   - A specialized join operation, **SpJoin**, facilitates the combination of node sets during the preprocessing stage. It efficiently merges node sets and their structural features into query-level representations.\n   - This operator significantly reduces the computational cost by working on sorted indices of nodes.\n\n6. **Neural Encoding**:\n   - SUREL+ employs multiple set neural encoders, including:\n     - **Mean Pooling**: Aggregates node embeddings through averaging.\n     - **LSTM**: Captures sequential patterns in node embeddings by treating the elements in a set as a sequence.\n     - **Attention Mechanism**: Computes attention scores for elements in a set, allowing for weighted aggregation based on their importance in predictions.\n\n7. **Prediction Readout**:\n   - The final output for predictions is obtained through a fully connected layer that takes the aggregated node set embeddings and structural features as input, yielding the desired predictions for tasks such as link prediction or relation type identification.\n\n### Conclusion\nSUREL+ is designed for efficiency and scalability in graph representation learning, employing a modular framework that allows different sampling and encoding strategies, with innovations like the SpG structure and the SpJoin operator to optimize performance while reducing memory costs associated with traditional methods."
}