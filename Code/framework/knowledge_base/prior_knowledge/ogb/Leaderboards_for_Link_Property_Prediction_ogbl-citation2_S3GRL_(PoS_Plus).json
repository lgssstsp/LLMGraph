{
    "Task Description": "Leaderboards for Link Property Prediction",
    "Dataset Name": "ogbl-citation2",
    "Dataset Link": "../linkprop/#ogbl-citation2",
    "Rank": 9,
    "Method": "S3GRL (PoS Plus)",
    "External Data": "No",
    "Test Accuracy": "0.8814 ± 0.0008",
    "Validation Accuracy": "0.8809 ± 0.0074",
    "Contact": "mailto:paul.louis@ontariotechu.net",
    "Paper Link": "https://arxiv.org/pdf/2301.12562.pdf",
    "Code Link": "https://github.com/venomouscyanide/S3GRL_OGB",
    "Parameters": "142,275,001",
    "Hardware": "GeForce GTX 1080 Ti (11 GB)",
    "Date": "May 2, 2023",
    "Local Paper PDF Path": "knowledge_base/Leaderboards_for_Link_Property_Prediction/ogbl-citation2/S3GRL_(PoS_Plus).pdf",
    "Paper Summary": "The paper introduces a novel framework called Scalable Simplified Subgraph Representation Learning (S3GRL) aimed at addressing the computational challenges associated with existing Subgraph Representation Learning approaches (SGRLs) in link prediction tasks. The focus is on simplifying the message-passing and aggregation operations typically used in SGRLs to enhance scalability without compromising performance.\n\n### Model Design Aspects:\n\n1. **Overall Architecture**:\n   - S3GRL integrates subgraph sampling and diffusion operators to create flexible representations for link prediction. It simplifies the computational overhead by precomputing subgraph-level diffusion operators instead of utilizing expensive message-passing schemes.\n\n2. **Components**:\n   - **Subgraph Sampling Strategy (Ψ)**: Takes the graph \\( G \\) and a target pair \\( T = \\{u, v\\} \\) as input and outputs the adjacency matrix of the enclosing subgraph \\( G_{uv} \\). This defines how different subgraphs are selected based on the target nodes, allowing diverse definitions like h-hop enclosing subgraphs, random-walk sampled subgraphs, etc.\n   \n   - **Diffusion Operator (Φ)**: Processes the sampled subgraph's adjacency matrix and outputs a diffusion matrix \\( M_{uv} \\). Various diffusion operators can be utilized, including:\n     - Adjacency or Laplacian operators to capture connectivity.\n     - Triangle/motif-based operators to identify community structures.\n     - Personalized PageRank operators to highlight significant connections.\n\n3. **Operator Set (S)**:\n   - The framework supports multiple operator pairs \\( (Ψ_i, Φ_i) \\), enabling flexibility across different modeling instances. Each operator captures various diffusion patterns, introducing a layered approach to information dissemination.\n\n4. **Joint Node Representation**:\n   - S3GRL derives a joint node representation \\( Z_{uv} \\) by applying the diffusion operators to the node feature matrix, yielding a comprehensive representation that includes both the individual node features and structural information derived from the surrounding subgraph.\n\n5. **Pooling Function**:\n   - The framework employs pooling functions for aggregating representations from the joint node representations. Common techniques include:\n     - **Center Pooling**: Aggregates features from target nodes while ensuring that their direct neighbors contribute.\n     - **Center-Common-Neighbor Pooling**: Enhances the representation by including common neighbors in the pooling process, further enriching the local context around the target nodes.\n\n6. **Scalability and Efficiency Enhancements**:\n   - S3GRL is characterized by its computational efficiency achieved through:\n     - Precomputing diffusion operators which drastically reduce runtime.\n     - Implementing operator-level optimizations leading to a multi-fold increase in training and inference speed compared to traditional SGRLs.\n\nOverall, S3GRL's design leverages flexible sampling and diffusion techniques to enhance scalability, efficiency, and efficacy in link prediction tasks without the need for extensive computational resources. The emphasis on operator pairings allows it to generalize across various graph structures, making it adaptable for large-scale graphs."
}