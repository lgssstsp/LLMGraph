{
    "Task Description": "Leaderboards for Link Property Prediction",
    "Dataset Name": "ogbl-ppa",
    "Dataset Link": "../linkprop/#ogbl-ppa",
    "Rank": 6,
    "Method": "RA+Edge Proposal Set",
    "External Data": "No",
    "Test Accuracy": "0.5324 ± 0.0000",
    "Validation Accuracy": "0.5142 ± 0.0000",
    "Contact": "mailto:qhwang@stanford.edu",
    "Paper Link": "https://arxiv.org/abs/2106.15810",
    "Code Link": "https://github.com/CUAI/Edge-Proposal-Sets",
    "Parameters": "0",
    "Hardware": "GeForce RTX 2080 Ti (11GB GPU)",
    "Date": "Oct 5, 2021",
    "Local Paper PDF Path": "knowledge_base/Leaderboards_for_Link_Property_Prediction/ogbl-ppa/RA+Edge_Proposal_Set.pdf",
    "Paper Summary": "The paper discusses a novel method for improving link prediction in graphs through the addition of a **proposal set** of edges as a pre-processing step. The core concept revolves around the premise that enhancing the input graph's topology by including edges that generally align with the existing graph structure can significantly boost the performance of various link prediction algorithms.\n\n### Key Methods and Model Design Aspects:\n\n1. **Proposal Set Definition**:\n   - Proposal sets consist of added edges that are intended to reflect the true relational structure of the graph better. These edges can be sourced from human expertise, trained models, or heuristic algorithms.\n\n2. **Edge Generation Strategies**:\n   - The paper highlights different strategies to create proposal sets, including:\n     - **Common Neighbors Heuristic**: This involves identifying edges based on the number of common neighbors between nodes.\n     - **Triangle Closure**: Emphasizes adding edges that would close triangles in the graph, enhancing local clustering.\n     - **Bootstrapping Framework (Filter & Rank)**: This involves:\n       - A **Filter stage** where a broad starting set of potential edges is pruned to keep only the highest-scoring edges based on a preliminary link prediction algorithm.\n       - A **Rank stage** where a secondary link prediction model is trained on the original graph combined with the proposal set to make final predictions.\n\n3. **Modification of Graph Topology**:\n   - The method hinges on altering the graph by introducing these proposal edges without changing the existing edges in the graph, thus optimizing the topology for the subsequent application of link prediction algorithms.\n\n4. **Adaptive Framework**: \n   - The proposal set can include edges that are either missing or predicted to arise in future interactions. This adaptability allows the model to enhance the graph irrespective of the edge generation process's randomness.\n\n5. **Handling Edge Quality**:\n   - The paper emphasizes the importance of the quality of the proposal set, where high-precision edges that align with the underlying structure yield better results. It explores the implications of adding negative edges and how the proportion of these edges doesn't detrimentally affect model performance if the proposal set is well-constructed.\n\n6. **Integration with Existing Models**:\n   - The approach can be employed with both traditional neighborhood heuristic models and more advanced Graph Neural Network (GNN) models, facilitating a wide range of applications. The integration involves ensuring that the chosen scoring functions for the proposal set complement the primary link prediction model.\n\n7. **Hyperparameter Optimization**:\n   - The size of the proposal set is treated as a hyperparameter that can be optimized based on performance on validation data, enhancing the specificity of model training and application.\n\n### Overall Design Philosophy:\nThe design philosophy emphasizes a straightforward yet effective method for edge addition, aiming for significant performance gains in link prediction. The enhancement of graph topology is focused on facilitating better signal detection within the graph, thereby improving the accuracy of various prediction algorithms. This strategy is posited as a scalable pre-processing step applicable across different methods and graph structures."
}